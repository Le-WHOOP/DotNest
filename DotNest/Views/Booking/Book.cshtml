@model DotNest.Models.BookingModel

@{
    int rentalId = (int)(ViewData["rentalId"] as int?)!;
    string rentalName = (ViewData["rentalName"] as string)!;
    ViewData["Title"] = "Book";
}


<h1>Réserver un bien</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Book">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RentalName">Bien choisi: @rentalName</label>
                <input asp-for="RentalName" class="form-control" hidden value="@rentalName"/>
            </div>
            <div class="form-group">
                <input asp-for="RentalId" class="form-control" hidden value="@rentalId" />
            </div>
            <div class="form-group">
                <input asp-for="Id" class="form-control" hidden />
            </div>
            <div class="form-group">
                <label asp-for="FromDate">Date de début</label>
                <input asp-for="FromDate" type="date" class="form-control" />
                <span asp-validation-for="FromDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ToDate">Date de fin</label>
                <input asp-for="ToDate" type="date" class="form-control" />
                <span asp-validation-for="ToDate" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Réserver" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Retour à la liste</a>
</div>

<link href="" />
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const unavailableDates = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewData["UnavailableDates"]));

            const fromInput = document.querySelector("#FromDate");
            const toInput = document.querySelector("#ToDate");

            const fromDatePicker = flatpickr(fromInput, {
                dateFormat: "Y-m-d",
                disable: unavailableDates,
                minDate: "today",
                onChange: function (selectedDates, dateStr) {
                    toDatePicker.set("minDate", dateStr);
                },
                locale: "en"
            });

            const toDatePicker = flatpickr(toInput, {
                dateFormat: "Y-m-d",
                disable: unavailableDates,
                minDate: "today",
                onChange: function (selectedDates, dateStr) {
                    fromDatePicker.set("maxDate", dateStr);
                },
                locale: "en"
            });
        });
    </script>
}

